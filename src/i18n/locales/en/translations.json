{
  "author" : {
    "Pavel": "Pavel",
    "Marina": "Marina",
    "Alesia": "Alesia"
  },
  "pages": {
    "Main": "Playground",
    "SignIn": "Sign In",
    "SignUp": "Sign Up",
    "Logout": "Logout"
  },
  "English": "English",
  "Russian": "Russian",
  "mainPage": "Main Page",
  "errors": {
    "fieldIsEmpty": "field is empty",
    "invalidEmail": "the email is not valid",
    "invalidPassword": "password should have a minimum length of 8 symbols, at least one letter, one digit, one special character",
    "passwordMismatch": "the passwords don't match",
    "unknownError": "Something went wrong, try again later.",
    "emailAlreadyInUse": "This email address is already registered.",
    "wrongPassword": "Incorrect password entered.",
    "userNotFound": "The user with this email address is not registered, please go to the registration",
    "invalidEmailFirebase": "Invalid email address entered",
    "requestFailed": "request failed"
  },
  "formAuthorization": {
    "signIn": "Sign In",
    "signUp": "Sign Up",
    "labelEmail": "Email",
    "labelPassword": "Password",
    "labelRepeatPassword": "Repeat password",
    "createAccountLink": "Don`t have an account? Create an account →",
    "navigateToSignInLink": "Already have an account? Sign in →"
  },
  "registrationSuccessful" : "Registration successful",
  "authorizationSuccessful" : "Authorization successful",
  "responsePlaceholder": "Hit the Play Button to get a response here",
  "documentation": "Documentation",
  "notDocumentation": "documentation not available",
  "Loading": "Loading...",
  "docsDescription": "A GraphQL schema provides a root type for each kind of operation.",
  "somethingIsBroken": "Oops, something is broken ...",
  "Documentation": "Documentation",
  "ExecuteQuery": "Execute Query",
  "welcomePage": {
    "description": "This app allows you to get information about countries, continents, and languages via a GraphQL API. It provides a complete and understandable description of the data in your API, gives you the power to find out for exactly what you need, makes it easier to evolve APIs over time, and enables powerful developer tools.",
    "startButton": "Get started",
    "videoSubtitle": "How to use the app",
    "subtitleAdvantages": "Advantages",
    "advantageItemFirst": "Allows to get data by country name, region, capital",
    "advantageItemSecond": "Provides a list of all currencies or a specific currency by name",
    "advantageItemThird": "Supports search by regional blocks and abbreviation",
    "advantageItemFourth": "Displays a list of all languages or language by code",
    "team": "Our team",
    "teamMemberFirst":  "Marina",
    "teamMemberSecond": "Alesia",
    "teamLead": "Pavel",
    "teamMemberFirstDescription": "Implemented authorization and authentication using Firebase with email, and client-side validation. Create user redirection to the welcome page when the token expires. Implemented routing.",
    "teamLeadDescription": "Implemented localization of the application into 2 languages. Created the GraphiQL page. Developed the editor that allows you to edit the request. Created the header section and the variable section. Implemented the answer section. Wrote documentation.",
    "teamMemberSecondDescription": "Created the single design for the entire application. Developed the welcome page. Created the 404 page. Implemented adaptive and semantic layout. Created the video tutorial with the explanation of how each of the items is implemented in the app."
  }
}
